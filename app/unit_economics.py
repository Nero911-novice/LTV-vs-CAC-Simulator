import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.graph_objects as go
import plotly.express as px
from plotly.subplots import make_subplots
from datetime import datetime, timedelta
import random
from typing import Dict, List, Tuple, Optional
def show_ride_hailing_sidebar():
    """–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è ride-hailing"""
    with st.expander("üìñ Ride-Hailing –º–µ—Ç—Ä–∏–∫–∏"):
        st.markdown("""
        **AOV** - Average Order Value (—Å—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø–æ–µ–∑–¥–∫–∏)
        **–ö–æ–º–∏—Å—Å–∏—è —Å –∑–∞–∫–∞–∑–∞** - –∫–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å –ø–æ–µ–∑–¥–∫–∏
        **–ß–∞—Å—Ç–æ—Ç–∞** - –ø–æ–µ–∑–¥–æ–∫ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ—Å—è—Ü
        **Time to 2nd ride** - –≤—Ä–µ–º—è –¥–æ –≤—Ç–æ—Ä–æ–π –ø–æ–µ–∑–¥–∫–∏
        **Monthly Active Users** - –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –º–µ—Å—è—Ü
        **Supply/Demand balance** - –±–∞–ª–∞–Ω—Å –≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
        **Surge pricing** - –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
        **–ü—Ä–æ–º–æ–∫–æ–¥—ã** - —Å—É–±—Å–∏–¥–∏–∏ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        """)
    
    with st.expander("üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏"):
        st.markdown("""
        **–î–≤—É—Ö—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –º–æ–¥–µ–ª—å**: –≤–æ–¥–∏—Ç–µ–ª–∏ + –ø–∞—Å—Å–∞–∂–∏—Ä—ã
        **–°–µ—Ç–µ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã**: –±–æ–ª—å—à–µ –≤–æ–¥–∏—Ç–µ–ª–µ–π ‚Üí –±–æ–ª—å—à–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
        **–ü–ª–æ—Ç–Ω–æ—Å—Ç—å**: –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –≤ –∫—Ä—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö
        **–ü–∏–∫–æ–≤—ã–µ —á–∞—Å—ã**: rush hours, –≤—ã—Ö–æ–¥–Ω—ã–µ, –ø—Ä–∞–∑–¥–Ω–∏–∫–∏
        **–ö–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è**: –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–∞–º–ø–∞–Ω–∏–∏
        **–†–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ**: –ª–∏—Ü–µ–Ω–∑–∏–∏, –Ω–∞–ª–æ–≥–∏, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        """)

def unit_economics_calculator():
    """–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä Unit Economics –¥–ª—è ride-hailing"""
    st.header("üìä Unit Economics –¥–ª—è Ride-Hailing")
    
    st.markdown("""
    **–°–ø–µ—Ü–∏—Ñ–∏–∫–∞ ride-hailing**: –≤–º–µ—Å—Ç–æ –ø–æ–¥–ø–∏—Å–æ–∫ —É –Ω–∞—Å –ø–æ–µ–∑–¥–∫–∏, –≤–º–µ—Å—Ç–æ –≤–∞–ª–æ–≤–æ–π –º–∞—Ä–∂–∏ - –∫–æ–º–∏—Å—Å–∏—è —Å –∑–∞–∫–∞–∑–∞, 
    –∫–ª—é—á–µ–≤–∞—è –º–µ—Ç—Ä–∏–∫–∞ - —á–∞—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
    """)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("üöó –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–µ–∑–¥–æ–∫")
        
        aov = st.slider("–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø–æ–µ–∑–¥–∫–∏ (AOV)", 150, 800, 350, 25)
        take_rate = st.slider("–ö–æ–º–∏—Å—Å–∏—è —Å –∑–∞–∫–∞–∑–∞ (%)", 15, 35, 25, 1)
        monthly_frequency = st.slider("–ü–æ–µ–∑–¥–æ–∫ –≤ –º–µ—Å—è—Ü –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 1, 20, 4, 1)
        monthly_churn = st.slider("–ú–µ—Å—è—á–Ω—ã–π –æ—Ç—Ç–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (%)", 5, 25, 12, 1)
        
        # –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        ops_costs = st.slider("–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–º–µ—Å—è—Ü", 10, 100, 30, 5)
        
        # –†–∞—Å—á–µ—Ç LTV
        monthly_revenue = aov * (take_rate / 100) * monthly_frequency
        monthly_profit = monthly_revenue - ops_costs
        ltv = monthly_profit / (monthly_churn / 100)
        
        st.markdown(f"""
        <div class="metric-card">
            <h3>LTV –ø–∞—Å—Å–∞–∂–∏—Ä–∞: {ltv:,.0f} —Ä—É–±</h3>
            <p>–ú–µ—Å—è—á–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: {monthly_profit:,.0f} —Ä—É–±</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.subheader("üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è")
        
        # CAC —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
        marketing_spend = st.number_input("–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç (—Ä—É–±)", 500000, 20000000, 2000000, 100000)
        promo_budget = st.number_input("–ë—é–¥–∂–µ—Ç –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥—ã (—Ä—É–±)", 200000, 10000000, 1000000, 100000)
        new_users = st.number_input("–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", 500, 10000, 2000, 100)
        
        # –†–∞—Å—á–µ—Ç –ø–æ–ª–Ω–æ–≥–æ CAC
        total_acquisition_cost = marketing_spend + promo_budget
        cac_total = total_acquisition_cost / new_users
        cac_marketing = marketing_spend / new_users
        cac_promo = promo_budget / new_users
        
        st.markdown(f"""
        <div class="metric-card">
            <h3>–ü–æ–ª–Ω—ã–π CAC: {cac_total:,.0f} —Ä—É–±</h3>
            <p>–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: {cac_marketing:,.0f} | –ü—Ä–æ–º–æ: {cac_promo:,.0f}</p>
        </div>
        """, unsafe_allow_html=True)
    
    # –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–π
    st.subheader("üìà –ê–Ω–∞–ª–∏–∑ Unit Economics")
    
    col1, col2, col3, col4 = st.columns(4)
    
    ltv_cac_ratio = ltv / cac_total
    payback_months = cac_total / monthly_profit if monthly_profit > 0 else float('inf')
    
    # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è ride-hailing
    revenue_per_ride = aov * (take_rate / 100)
    rides_to_payback = cac_total / revenue_per_ride if revenue_per_ride > 0 else float('inf')
    
    with col1:
        color = "success" if ltv_cac_ratio >= 3 else "warning" if ltv_cac_ratio >= 2 else "error"
        st.markdown(f"""
        <div class="{color}-card">
            <h4>LTV/CAC</h4>
            <h2>{ltv_cac_ratio:.1f}:1</h2>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        color = "success" if payback_months <= 6 else "warning" if payback_months <= 12 else "error"
        st.markdown(f"""
        <div class="{color}-card">
            <h4>–û–∫—É–ø–∞–µ–º–æ—Å—Ç—å</h4>
            <h2>{payback_months:.1f} –º–µ—Å</h2>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        st.markdown(f"""
        <div class="metric-card">
            <h4>–î–æ—Ö–æ–¥ —Å –ø–æ–µ–∑–¥–∫–∏</h4>
            <h2>{revenue_per_ride:.0f} —Ä—É–±</h2>
        </div>
        """, unsafe_allow_html=True)
    
    with col4:
        color = "success" if rides_to_payback <= 20 else "warning" if rides_to_payback <= 40 else "error"
        st.markdown(f"""
        <div class="{color}-card">
            <h4>–ü–æ–µ–∑–¥–æ–∫ –¥–æ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏</h4>
            <h2>{rides_to_payback:.0f}</h2>
        </div>
        """, unsafe_allow_html=True)
    
    # –ê–Ω–∞–ª–∏–∑ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è ride-hailing
    create_ride_hailing_sensitivity_chart(aov, take_rate, monthly_frequency, monthly_churn, cac_total)
    
    # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
    show_ride_hailing_interpretation(ltv_cac_ratio, payback_months, rides_to_payback, monthly_frequency)

def create_ride_hailing_sensitivity_chart(aov: float, take_rate: float, frequency: float, churn: float, cac: float):
    """–ì—Ä–∞—Ñ–∏–∫ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è ride-hailing –º–µ—Ç—Ä–∏–∫"""
    st.subheader("üéØ –ê–Ω–∞–ª–∏–∑ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ride-hailing –º–µ—Ç—Ä–∏–∫")
    
    # –í–∞—Ä–∏–∞—Ü–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    frequency_range = np.linspace(frequency * 0.5, frequency * 2, 20)
    take_rate_range = np.linspace(take_rate * 0.7, take_rate * 1.4, 20)
    aov_range = np.linspace(aov * 0.8, aov * 1.3, 20)
    
    # –†–∞—Å—á–µ—Ç LTV –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    ltv_frequency = [(aov * (take_rate / 100) * f - 30) / (churn / 100) for f in frequency_range]
    ltv_take_rate = [(aov * (tr / 100) * frequency - 30) / (churn / 100) for tr in take_rate_range]
    ltv_aov = [(a * (take_rate / 100) * frequency - 30) / (churn / 100) for a in aov_range]
    
    # –ì—Ä–∞—Ñ–∏–∫ —Å —Ç—Ä–µ–º—è subplot'–∞–º–∏
    fig = make_subplots(
        rows=2, cols=2,
        subplot_titles=('–í–ª–∏—è–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –ø–æ–µ–∑–¥–æ–∫', '–í–ª–∏—è–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ —Å –∑–∞–∫–∞–∑–∞', 
                       '–í–ª–∏—è–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞', '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–æ–≤'),
        specs=[[{"colspan": 1}, {"colspan": 1}], 
               [{"colspan": 1}, {"colspan": 1}]]
    )
    
    # –ì—Ä–∞—Ñ–∏–∫ 1: –ß–∞—Å—Ç–æ—Ç–∞ –ø–æ–µ–∑–¥–æ–∫
    fig.add_trace(
        go.Scatter(x=frequency_range, y=ltv_frequency, mode='lines+markers',
                  name='LTV –æ—Ç —á–∞—Å—Ç–æ—Ç—ã', line=dict(color='blue', width=3)),
        row=1, col=1
    )
    
    # –ì—Ä–∞—Ñ–∏–∫ 2: –ö–æ–º–∏—Å—Å–∏—è —Å –∑–∞–∫–∞–∑–∞
    fig.add_trace(
        go.Scatter(x=take_rate_range, y=ltv_take_rate, mode='lines+markers',
                  name='LTV –æ—Ç take rate', line=dict(color='green', width=3)),
        row=1, col=2
    )
    
    # –ì—Ä–∞—Ñ–∏–∫ 3: AOV
    fig.add_trace(
        go.Scatter(x=aov_range, y=ltv_aov, mode='lines+markers',
                  name='LTV –æ—Ç AOV', line=dict(color='orange', width=3)),
        row=2, col=1
    )
    
    # –ì—Ä–∞—Ñ–∏–∫ 4: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —ç–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    elasticity_data = {
        '–ü–∞—Ä–∞–º–µ—Ç—Ä': ['–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ–µ–∑–¥–æ–∫', '–ö–æ–º–∏—Å—Å–∏—è —Å –∑–∞–∫–∞–∑–∞', '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫'],
        '–≠–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç—å': [
            (max(ltv_frequency) - min(ltv_frequency)) / min(ltv_frequency),
            (max(ltv_take_rate) - min(ltv_take_rate)) / min(ltv_take_rate),
            (max(ltv_aov) - min(ltv_aov)) / min(ltv_aov)
        ]
    }
    
    fig.add_trace(
        go.Bar(x=elasticity_data['–ü–∞—Ä–∞–º–µ—Ç—Ä'], y=elasticity_data['–≠–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç—å'],
               marker_color=['blue', 'green', 'orange']),
        row=2, col=2
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ª–∏–Ω–∏—é CAC
    for i in range(1, 4):
        row = 1 if i <= 2 else 2
        col = i if i <= 2 else i - 2
        fig.add_hline(y=cac, line_dash="dash", line_color="red", 
                     annotation_text=f"CAC = {cac:,.0f}", row=row, col=col)
    
    fig.update_layout(height=600, showlegend=False)
    fig.update_xaxes(title_text="–ü–æ–µ–∑–¥–æ–∫/–º–µ—Å—è—Ü", row=1, col=1)
    fig.update_xaxes(title_text="–ö–æ–º–∏—Å—Å–∏—è —Å –∑–∞–∫–∞–∑–∞ (%)", row=1, col=2)
    fig.update_xaxes(title_text="AOV (—Ä—É–±)", row=2, col=1)
    fig.update_xaxes(title_text="–ü–∞—Ä–∞–º–µ—Ç—Ä", row=2, col=2)
    fig.update_yaxes(title_text="LTV (—Ä—É–±)")
    
    st.plotly_chart(fig, use_container_width=True)
    
    # –ò–Ω—Å–∞–π—Ç—ã –¥–ª—è ride-hailing
    st.info(f"""
    üí° **–ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã –¥–ª—è ride-hailing**:
    
    1. **–ß–∞—Å—Ç–æ—Ç–∞ - –∫–æ—Ä–æ–ª—å**: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø–æ–µ–∑–¥–æ–∫ —Å {frequency} –¥–æ {frequency*1.5:.1f} –≤ –º–µ—Å—è—Ü 
       –ø–æ–≤—ã—à–∞–µ—Ç LTV –Ω–∞ {((max(ltv_frequency)/min(ltv_frequency) - 1) * 100):.0f}%
    
    2. **–ö–æ–º–∏—Å—Å–∏—è —Å –∑–∞–∫–∞–∑–∞ –∏–º–µ–µ—Ç –ø—Ä–µ–¥–µ–ª—ã**: –ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç LTV, –Ω–æ —Å–Ω–∏–∂–∞–µ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
    
    3. **AOV –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–æ–¥—É–∫—Ç–∞**: –ü—Ä–µ–º–∏—É–º-—Å–µ–≥–º–µ–Ω—Ç vs —ç–∫–æ–Ω–æ–º –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫
    
    4. **–§–æ–∫—É—Å –Ω–∞ habit forming**: –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å occasional users –≤ power users –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ
    """)

def show_ride_hailing_interpretation(ltv_cac_ratio: float, payback_months: float, 
                                   rides_to_payback: float, frequency: float):
    """–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è ride-hailing"""
    st.subheader("üß† –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –¥–ª—è ride-hailing –±–∏–∑–Ω–µ—Å–∞")
    
    if ltv_cac_ratio >= 4:
        st.success("üéâ **–û—Ç–ª–∏—á–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏!** Unit economics –∑–¥–æ—Ä–æ–≤—ã–µ, –º–æ–∂–Ω–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å—Å—è.")
    elif ltv_cac_ratio >= 2.5:
        st.info("üëç **–ü—Ä–∏–µ–º–ª–µ–º—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏.** –ï—Å—Ç—å –º–µ—Å—Ç–æ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —á–∞—Å—Ç–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.")
    elif ltv_cac_ratio >= 1.5:
        st.warning("‚ö†Ô∏è **–ù–∞ –≥—Ä–∞–Ω–∏ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏.** –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å retention –∏ —á–∞—Å—Ç–æ—Ç—É.")
    else:
        st.error("üö® **–£–±—ã—Ç–æ—á–Ω–∞—è –º–æ–¥–µ–ª—å!** –ü–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –∏ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.")
    
    # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è ride-hailing
    if frequency < 3:
        st.warning("üìä **–ù–∏–∑–∫–∞—è —á–∞—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.** –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ loyalty –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
    
    if rides_to_payback > 30:
        st.error("üö® **–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–µ–∑–¥–æ–∫ –¥–æ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏.** –°–Ω–∏–∂–∞–π—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã –∏–ª–∏ —É–ª—É—á—à–∞–π—Ç–µ retention.")
    elif rides_to_payback <= 15:
        st.success("üí∞ **–ë—ã—Å—Ç—Ä–∞—è –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å –≤ –ø–æ–µ–∑–¥–∫–∞—Ö** - –æ—Ç–ª–∏—á–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è.")
    
    # –ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–µ –±–µ–Ω—á–º–∞—Ä–∫–∏
    st.markdown("""
    ### üìä –ë–µ–Ω—á–º–∞—Ä–∫–∏ ride-hailing –∏–Ω–¥—É—Å—Ç—Ä–∏–∏:
    
    **LTV/CAC —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è:**
    - üü¢ Mature markets: 3-5:1
    - üü° Growing markets: 2-3:1  
    - üî¥ New markets: 1.5-2:1 (–¥–æ–ø—É—Å—Ç–∏–º–æ –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–º —Ä–æ—Å—Ç–µ)
    
    **–ü–æ–µ–∑–¥–æ–∫ –¥–æ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏:**
    - üü¢ 10-20 –ø–æ–µ–∑–¥–æ–∫ (–æ—Ç–ª–∏—á–Ω–æ)
    - üü° 20-30 –ø–æ–µ–∑–¥–æ–∫ (–ø—Ä–∏–µ–º–ª–µ–º–æ)
    - üî¥ 30+ –ø–æ–µ–∑–¥–æ–∫ (–ø—Ä–æ–±–ª–µ–º–∞)
    
    **–ß–∞—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
    - üü¢ Power users: 8+ –ø–æ–µ–∑–¥–æ–∫/–º–µ—Å—è—Ü
    - üü° Regular users: 3-7 –ø–æ–µ–∑–¥–æ–∫/–º–µ—Å—è—Ü
    - üî¥ Occasional users: 1-2 –ø–æ–µ–∑–¥–∫–∏/–º–µ—Å—è—Ü
    """)
